1. CREATE ENVIRONMENT
    * specific python version
    conda create -n djangoenv python=3.6 anaconda    
    
    * latest python
    According to the documentation for conda install,(https://docs.conda.io/projects/conda/en/latest/commands/install.html) 
    conda will (when no version is specified, it seems) try to install the latest version of the specified package(s).

    Hence, you should be able to get the latest version of python in your new environment by running a command like this.
    conda create --name=<myEnvNameHere> python


2. ACTIVATE THE NEW ENVIRONMENT
    conda activate djangoenv

3. INSTALL DJANGO IN THE NEW ENVIRONMENT
    conda install -c anaconda django 
    
    or better use pip:
    python -m pip install django

4. STARTING A DJANGO PROJECT 
    * with activated environment
    django-admin startproject my-project-name

5. Move into the project directory
    cd my-project-name

6. Run the development server
    python manage.py runserver

! Do NOT USE the Django development server in PRODUCTION !


------------------------------------------------------------------------
7. Adding a new app
    * with activated environment, cd into the right folder of the Django project
    python manage.py startapp appname

once created, add appname to the installed_apps list in settings.py of django project
django app: python package, specifically intended for use in django projects
typical django project consists of multiple apps, a way for organizing the code, 
related things are put together in an app (info, touring schedule, tickets, etc.)
apps can be reused between projects
keep apps small and simple, help maintain code modular & organized
unix philosophy: do one thing and do it well
should have a clear, simple purpopse:
normally the purpose should be explained with a single sentence, otherwise the app is too complex


8. Adding a page
    in views.py - add a view function (e.g. welcome, about...)
    def welcome(request):
        return HttpResponse("Welcome to my page!"

9. Assign the page to URL
    to be able to visit the page added above, we need to assign it to an URL:
    import the respective view and add a call to path, a function that makes a mapping from a URL to a view:
    in urls.py    
    from website.views import welcome
    urlpatterns = [
        path('', welcome), #'': empty string = index, root page of the site
        ......
    ]

